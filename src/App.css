.datetime-input-wrapper {
  display: flex;
  gap: 0.5rem;
}

.datetime-input-wrapper input {
  anchor-name: --datepicker-anchor-el;
}

.datepicker-opener {
  min-width: 24px;
  min-height: 24px;
  aspect-ratio: 1/1;
  align-content: center;
  border: 1px solid #111;
  border-radius: 0.5rem;
  background-color: transparent;
  transition: color 0.2s ease, background-color 0.2s ease;
  cursor: pointer;
}

.datepicker-opener svg {
  aspect-ratio: 1/1;
  max-width: 24px;
  width: 100%;
}

@media (hover: hover) {
  .datepicker-opener:hover {
    background-color: rgba(0 0 0 / 0.1);
  }
  .datepicker-opener:active {
    background-color: rgba(0 0 0 / 0.2);
  }
}

.datepicker-opener[aria-expanded="true"] {
  background-color: #121212;
  color: white;
}

.datepicker-popover[popover] {
  position-anchor: --datepicker-anchor-el;
  inset-block-start: anchor(start);
  inset-inline-end: anchor(start);
  /* 
   * Reset for the [popover] UA style for insets
   * @see https://github.com/w3c/csswg-drafts/issues/10258
   */
  inset: auto;

  /* TODO: Is there a better way of positioning the sides? */
  margin-inline: var(--side-padding);
  margin-block-start: 0.5rem;

  border: none;
  padding: 0;

  /* Allow animating discrete values, such as display and overlay. `overlay` is
   * a property that controls when an element is in the top-layer, such as for
   * popovers and dialog with showModal(). overlay is set automatically by the
   * UA, but we can transition it/delay it. Thus, delaying when an element exits
   * the top layer (via `overlay`), and when it becomes `display: none` we can
   * ensure that all animations complete, prior to the element being removed or
   * entering normal flow. 
   *
   * Without these properties, we would use JS to listen for a close event and
   * wait for animations, prior to dismissing the popover manually. That is of
   * course doable, but this is a bit simpler, and works natively with the
   * soft-dismiss behavior.
   */
  transition-behavior: allow-discrete;
  transition-duration: 0.2s;
  transition-property: display, overlay, opacity;

  opacity: 0;
}

.datepicker-popover[popover]::before {
  display: block;
  width: 0;
  height: 0;
  border-block-start: 0 dotted;
  border-inline: 10px solid transparent;
  border-block-end: 10px solid #121212;
  margin-inline-start: 1rem;
  content: "";
}

.datepicker-popover[popover]:popover-open {
  opacity: 1;

  /* 
   * Popovers are equivalent to display: none prior to being open, so we need to
   * set their initial styles for transitions.
   */
  @starting-style {
    opacity: 0;
  }
}

.datepicker {
  background: #121212;
  color: white;
  padding: 1rem;
  width: 100%;
  max-width: 100%;
  border-radius: 0.5rem;
}

.datepicker header {
  display: flex;
  gap: 0.5rem;
  justify-content: space-between;
  align-items: center;
}

.datepicker .month-year {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.datepicker .month-buttons {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.datepicker .month-buttons button {
  align-content: center;
  padding: 0.5rem;
  color: white;
  background: none;
  border: none;
  border-radius: 50%;
  aspect-ratio: 1/1;
  min-width: 24px;
  min-height: 24px;
  transition: background-color 0.2s ease;
  cursor: pointer;
}

.datepicker .month-buttons button svg {
  width: 24px;
  height: 24px;
}

.datepicker .days-grid {
  display: grid;
  margin-block-start: 1rem;
  grid-template-columns: repeat(7, 1fr);
  gap: 0.5rem;
}

.datepicker .browsing-day {
  align-content: center;
  padding: 0.5rem;
  color: white;
  background: none;
  border: none;
  border-radius: 50%;
  aspect-ratio: 1/1;
  min-width: 24px;
  min-height: 24px;
  transition: background-color 0.2s ease;
  cursor: pointer;
}

@media (hover: hover) {
  .datepicker .browsing-day:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }
  .datepicker .browsing-day:active {
    background-color: rgba(255, 255, 255, 0.2);
  }
}

.datepicker .browsing-day[aria-current="date"] {
  background-color: #223344;
}

.datepicker .browsing-day[aria-pressed="true"] {
  background-color: #4f49b4;
  color: white;
}

.datepicker footer {
  display: flex;
  justify-content: end;
  gap: 0.5rem;
}

/* Method to visually hide something but still */
/* keep it available to screen readers */
.visually-hidden {
  position: absolute;
  top: auto;
  overflow: hidden;
  clip: rect(1px 1px 1px 1px); /* IE 6/7 */
  clip: rect(1px, 1px, 1px, 1px);
  width: 1px;
  height: 1px;
  white-space: nowrap;
}
